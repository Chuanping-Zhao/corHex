(cor_data$Var1 == y_var & cor_data$Var2 == x_var))
# print(paste("idx:", idx))
if (length(idx) == 1) {
custom_upper_plots[[idx]]
} else {
ggplot2::ggplot() + ggplot2::theme_void()
}
}),
lower = list(continuous = GGally::wrap(geomhex, binss = bin)),
diag = list(continuous = custom_densityDiag)
)
custom_upper_plots <- lapply(seq_len(nrow(cor_data)), function(idx) {
ggplot2::ggplot() +
#  ggplot2::geom_point(ggplot2::aes(x = 0.5, y = 0.5), shape = 21, size = abs(cor_data$Freq[idx]) * 25,
#                     fill = color_mapping(cor_data$Freq[idx]), color = "black", alpha = 0.8) +
ggplot2::annotate("text", x = 0.5, y = 0.5, label = sprintf("R = %.2f", cor_data$Freq[idx]),
size = 4, color = "black") +
ggplot2::theme_void() +
ggplot2::theme(aspect.ratio = 1)
})
GGally::ggpairs(
dt.ggpairs,
upper = list(continuous = function(data, mapping, ...) {
x_var <- as.character(rlang::get_expr(mapping$x))
y_var <- as.character(rlang::get_expr(mapping$y))
# print(paste("x_var:", x_var, "y_var:", y_var))
idx <- which((cor_data$Var1 == x_var & cor_data$Var2 == y_var) |
(cor_data$Var1 == y_var & cor_data$Var2 == x_var))
# print(paste("idx:", idx))
if (length(idx) == 1) {
custom_upper_plots[[idx]]
} else {
ggplot2::ggplot() + ggplot2::theme_void()
}
}),
lower = list(continuous = GGally::wrap(geomhex, binss = bin)),
diag = list(continuous = custom_densityDiag)
)
custom_upper_plots <- lapply(seq_len(nrow(cor_data)), function(idx) {
ggplot2::ggplot() +
#  ggplot2::geom_point(ggplot2::aes(x = 0.5, y = 0.5), shape = 21, size = abs(cor_data$Freq[idx]) * 25,
#                     fill = color_mapping(cor_data$Freq[idx]), color = "black", alpha = 0.8) +
ggplot2::annotate("text", x = 0.5, y = 0.5, label = sprintf("R = %.2f", cor_data$Freq[idx]),
size = 2, color = "black") +
ggplot2::theme_void() +
ggplot2::theme(aspect.ratio = 1)
})
GGally::ggpairs(
dt.ggpairs,
upper = list(continuous = function(data, mapping, ...) {
x_var <- as.character(rlang::get_expr(mapping$x))
y_var <- as.character(rlang::get_expr(mapping$y))
# print(paste("x_var:", x_var, "y_var:", y_var))
idx <- which((cor_data$Var1 == x_var & cor_data$Var2 == y_var) |
(cor_data$Var1 == y_var & cor_data$Var2 == x_var))
# print(paste("idx:", idx))
if (length(idx) == 1) {
custom_upper_plots[[idx]]
} else {
ggplot2::ggplot() + ggplot2::theme_void()
}
}),
lower = list(continuous = GGally::wrap(geomhex, binss = bin)),
diag = list(continuous = custom_densityDiag)
)
ggplot2::ggplot() +
#  ggplot2::geom_point(ggplot2::aes(x = 0.5, y = 0.5), shape = 21, size = abs(cor_data$Freq[idx]) * 25,
#                     fill = color_mapping(cor_data$Freq[idx]), color = "black", alpha = 0.8) +
ggplot2::annotate("text", x = 0.5, y = 0.5, label = sprintf("R = %.2f", cor_data$Freq[idx]),
size = 3, color = "black") +
ggplot2::theme_void() +
ggplot2::theme(aspect.ratio = 1)
custom_upper_plots <- lapply(seq_len(nrow(cor_data)), function(idx) {
ggplot2::ggplot() +
#  ggplot2::geom_point(ggplot2::aes(x = 0.5, y = 0.5), shape = 21, size = abs(cor_data$Freq[idx]) * 25,
#                     fill = color_mapping(cor_data$Freq[idx]), color = "black", alpha = 0.8) +
ggplot2::annotate("text", x = 0.5, y = 0.5, label = sprintf("R = %.2f", cor_data$Freq[idx]),
size = 3, color = "black") +
ggplot2::theme_void() +
ggplot2::theme(aspect.ratio = 1)
})
GGally::ggpairs(
dt.ggpairs,
upper = list(continuous = function(data, mapping, ...) {
x_var <- as.character(rlang::get_expr(mapping$x))
y_var <- as.character(rlang::get_expr(mapping$y))
# print(paste("x_var:", x_var, "y_var:", y_var))
idx <- which((cor_data$Var1 == x_var & cor_data$Var2 == y_var) |
(cor_data$Var1 == y_var & cor_data$Var2 == x_var))
# print(paste("idx:", idx))
if (length(idx) == 1) {
custom_upper_plots[[idx]]
} else {
ggplot2::ggplot() + ggplot2::theme_void()
}
}),
lower = list(continuous = GGally::wrap(geomhex, binss = bin)),
diag = list(continuous = custom_densityDiag)
)
View(cor_data)
0.9*20
2/0.99
custom_upper_plots <- lapply(seq_len(nrow(cor_data)), function(idx) {
ggplot2::ggplot() +
#  ggplot2::geom_point(ggplot2::aes(x = 0.5, y = 0.5), shape = 21, size = abs(cor_data$Freq[idx]) * 25,
#                     fill = color_mapping(cor_data$Freq[idx]), color = "black", alpha = 0.8) +
ggplot2::annotate("text", x = 0.5, y = 0.5, label = sprintf("R = %.2f", cor_data$Freq[idx]),
size = abs(cor_data$Freq[idx])*2, color =  color_mapping(cor_data$Freq[idx]))) +
custom_upper_plots <- lapply(seq_len(nrow(cor_data)), function(idx) {
ggplot2::ggplot() +
#  ggplot2::geom_point(ggplot2::aes(x = 0.5, y = 0.5), shape = 21, size = abs(cor_data$Freq[idx]) * 25,
#                     fill = color_mapping(cor_data$Freq[idx]), color = "black", alpha = 0.8) +
ggplot2::annotate("text", x = 0.5, y = 0.5, label = sprintf("R = %.2f", cor_data$Freq[idx]),
size = abs(cor_data$Freq[idx])*2, color =  color_mapping(cor_data$Freq[idx]))) +
color_mapping <- function(value) {
if (value > 0) {
scales::col_numeric(palette = c("white", "#F48249"), domain = c(0, 1))(value)
} else {
scales::col_numeric(palette = c("white", "#1C85C2"), domain = c(-1, 0))(value)
}
}
custom_upper_plots <- lapply(seq_len(nrow(cor_data)), function(idx) {
ggplot2::ggplot() +
#  ggplot2::geom_point(ggplot2::aes(x = 0.5, y = 0.5), shape = 21, size = abs(cor_data$Freq[idx]) * 25,
#                     fill = color_mapping(cor_data$Freq[idx]), color = "black", alpha = 0.8) +
ggplot2::annotate("text", x = 0.5, y = 0.5, label = sprintf("R = %.2f", cor_data$Freq[idx]),
size = abs(cor_data$Freq[idx]) * 2, color =color_mapping(cor_data$Freq[idx])) +
ggplot2::theme_void() +
ggplot2::theme(aspect.ratio = 1)
})
GGally::ggpairs(
dt.ggpairs,
upper = list(continuous = function(data, mapping, ...) {
x_var <- as.character(rlang::get_expr(mapping$x))
y_var <- as.character(rlang::get_expr(mapping$y))
# print(paste("x_var:", x_var, "y_var:", y_var))
idx <- which((cor_data$Var1 == x_var & cor_data$Var2 == y_var) |
(cor_data$Var1 == y_var & cor_data$Var2 == x_var))
# print(paste("idx:", idx))
if (length(idx) == 1) {
custom_upper_plots[[idx]]
} else {
ggplot2::ggplot() + ggplot2::theme_void()
}
}),
lower = list(continuous = GGally::wrap(geomhex, binss = bin)),
diag = list(continuous = custom_densityDiag)
)
custom_upper_plots <- lapply(seq_len(nrow(cor_data)), function(idx) {
ggplot2::ggplot() +
#  ggplot2::geom_point(ggplot2::aes(x = 0.5, y = 0.5), shape = 21, size = abs(cor_data$Freq[idx]) * 25,
#                     fill = color_mapping(cor_data$Freq[idx]), color = "black", alpha = 0.8) +
ggplot2::annotate("text", x = 0.5, y = 0.5, label = sprintf("R = %.2f", cor_data$Freq[idx]),
size = abs(cor_data$Freq[idx]) *3, color =color_mapping(cor_data$Freq[idx])) +
ggplot2::theme_void() +
ggplot2::theme(aspect.ratio = 1)
})
GGally::ggpairs(
dt.ggpairs,
upper = list(continuous = function(data, mapping, ...) {
x_var <- as.character(rlang::get_expr(mapping$x))
y_var <- as.character(rlang::get_expr(mapping$y))
# print(paste("x_var:", x_var, "y_var:", y_var))
idx <- which((cor_data$Var1 == x_var & cor_data$Var2 == y_var) |
(cor_data$Var1 == y_var & cor_data$Var2 == x_var))
# print(paste("idx:", idx))
if (length(idx) == 1) {
custom_upper_plots[[idx]]
} else {
ggplot2::ggplot() + ggplot2::theme_void()
}
}),
lower = list(continuous = GGally::wrap(geomhex, binss = bin)),
diag = list(continuous = custom_densityDiag)
)
custom_upper_plots <- lapply(seq_len(nrow(cor_data)), function(idx) {
ggplot2::ggplot() +
#  ggplot2::geom_point(ggplot2::aes(x = 0.5, y = 0.5), shape = 21, size = abs(cor_data$Freq[idx]) * 25,
#                     fill = color_mapping(cor_data$Freq[idx]), color = "black", alpha = 0.8) +
ggplot2::annotate("text", x = 0.5, y = 0.5, label = sprintf("%.2f", cor_data$Freq[idx]),
size = abs(cor_data$Freq[idx]) *3, color =color_mapping(cor_data$Freq[idx])) +
ggplot2::theme_void() +
ggplot2::theme(aspect.ratio = 1)
})
ggpairs_plot <- GGally::ggpairs(
dt.ggpairs,
upper = list(continuous = function(data, mapping, ...) {
x_var <- as.character(rlang::get_expr(mapping$x))
y_var <- as.character(rlang::get_expr(mapping$y))
# print(paste("x_var:", x_var, "y_var:", y_var))
idx <- which((cor_data$Var1 == x_var & cor_data$Var2 == y_var) |
(cor_data$Var1 == y_var & cor_data$Var2 == x_var))
# print(paste("idx:", idx))
if (length(idx) == 1) {
custom_upper_plots[[idx]]
} else {
ggplot2::ggplot() + ggplot2::theme_void()
}
}),
lower = list(continuous = GGally::wrap(geomhex, binss = bin)),
diag = list(continuous = custom_densityDiag)
)
GGally::ggpairs(
dt.ggpairs,
upper = list(continuous = function(data, mapping, ...) {
x_var <- as.character(rlang::get_expr(mapping$x))
y_var <- as.character(rlang::get_expr(mapping$y))
# print(paste("x_var:", x_var, "y_var:", y_var))
idx <- which((cor_data$Var1 == x_var & cor_data$Var2 == y_var) |
(cor_data$Var1 == y_var & cor_data$Var2 == x_var))
# print(paste("idx:", idx))
if (length(idx) == 1) {
custom_upper_plots[[idx]]
} else {
ggplot2::ggplot() + ggplot2::theme_void()
}
}),
lower = list(continuous = GGally::wrap(geomhex, binss = bin)),
diag = list(continuous = custom_densityDiag)
)
custom_upper_plots <- lapply(seq_len(nrow(cor_data)), function(idx) {
ggplot2::ggplot() +
#  ggplot2::geom_point(ggplot2::aes(x = 0.5, y = 0.5), shape = 21, size = abs(cor_data$Freq[idx]) * 25,
#                     fill = color_mapping(cor_data$Freq[idx]), color = "black", alpha = 0.8) +
ggplot2::annotate("text", x = 0.5, y = 0.5, label = sprintf("%.2f", cor_data$Freq[idx]),
size = abs(cor_data$Freq[idx]) *5, color =color_mapping(cor_data$Freq[idx])) +
ggplot2::theme_void() +
ggplot2::theme(aspect.ratio = 1)
})
GGally::ggpairs(
dt.ggpairs,
upper = list(continuous = function(data, mapping, ...) {
x_var <- as.character(rlang::get_expr(mapping$x))
y_var <- as.character(rlang::get_expr(mapping$y))
# print(paste("x_var:", x_var, "y_var:", y_var))
idx <- which((cor_data$Var1 == x_var & cor_data$Var2 == y_var) |
(cor_data$Var1 == y_var & cor_data$Var2 == x_var))
# print(paste("idx:", idx))
if (length(idx) == 1) {
custom_upper_plots[[idx]]
} else {
ggplot2::ggplot() + ggplot2::theme_void()
}
}),
lower = list(continuous = GGally::wrap(geomhex, binss = bin)),
diag = list(continuous = custom_densityDiag)
)
custom_upper_plots <- lapply(seq_len(nrow(cor_data)), function(idx) {
ggplot2::ggplot() +
#  ggplot2::geom_point(ggplot2::aes(x = 0.5, y = 0.5), shape = 21, size = abs(cor_data$Freq[idx]) * 25,
#                     fill = color_mapping(cor_data$Freq[idx]), color = "black", alpha = 0.8) +
ggplot2::annotate("text", x = 0.5, y = 0.5, label = sprintf("%.2f", cor_data$Freq[idx]),
size = abs(cor_data$Freq[idx]) *4, color =color_mapping(cor_data$Freq[idx])) +
ggplot2::theme_void() +
ggplot2::theme(aspect.ratio = 1)
})
GGally::ggpairs(
dt.ggpairs,
upper = list(continuous = function(data, mapping, ...) {
x_var <- as.character(rlang::get_expr(mapping$x))
y_var <- as.character(rlang::get_expr(mapping$y))
# print(paste("x_var:", x_var, "y_var:", y_var))
idx <- which((cor_data$Var1 == x_var & cor_data$Var2 == y_var) |
(cor_data$Var1 == y_var & cor_data$Var2 == x_var))
# print(paste("idx:", idx))
if (length(idx) == 1) {
custom_upper_plots[[idx]]
} else {
ggplot2::ggplot() + ggplot2::theme_void()
}
}),
lower = list(continuous = GGally::wrap(geomhex, binss = bin)),
diag = list(continuous = custom_densityDiag)
)
color_mapping <- function(value) {
if (value > 0) {
scales::col_numeric(palette = c("white", "#9F2F7F"), domain = c(0, 1))(value)
} else {
scales::col_numeric(palette = c("white", "#1C85C2"), domain = c(-1, 0))(value)
}
}
custom_upper_plots <- lapply(seq_len(nrow(cor_data)), function(idx) {
ggplot2::ggplot() +
#  ggplot2::geom_point(ggplot2::aes(x = 0.5, y = 0.5), shape = 21, size = abs(cor_data$Freq[idx]) * 25,
#                     fill = color_mapping(cor_data$Freq[idx]), color = "black", alpha = 0.8) +
ggplot2::annotate("text", x = 0.5, y = 0.5, label = sprintf("%.2f", cor_data$Freq[idx]),
size = abs(cor_data$Freq[idx]) *4, color =color_mapping(cor_data$Freq[idx])) +
ggplot2::theme_void() +
ggplot2::theme(aspect.ratio = 1)
})
GGally::ggpairs(
dt.ggpairs,
upper = list(continuous = function(data, mapping, ...) {
x_var <- as.character(rlang::get_expr(mapping$x))
y_var <- as.character(rlang::get_expr(mapping$y))
# print(paste("x_var:", x_var, "y_var:", y_var))
idx <- which((cor_data$Var1 == x_var & cor_data$Var2 == y_var) |
(cor_data$Var1 == y_var & cor_data$Var2 == x_var))
# print(paste("idx:", idx))
if (length(idx) == 1) {
custom_upper_plots[[idx]]
} else {
ggplot2::ggplot() + ggplot2::theme_void()
}
}),
lower = list(continuous = GGally::wrap(geomhex, binss = bin)),
diag = list(continuous = custom_densityDiag)
)
color_mapping <- function(value) {
if (value > 0) {
scales::col_numeric(palette = c("black", "#31688E"), domain = c(0, 1))(value)
} else {
scales::col_numeric(palette = c("black", "#31688E"), domain = c(-1, 0))(value)
}
}
custom_upper_plots <- lapply(seq_len(nrow(cor_data)), function(idx) {
ggplot2::ggplot() +
ggplot2::annotate("text", x = 0.5, y = 0.5, label = sprintf("%.2f", cor_data$Freq[idx]),
size = abs(cor_data$Freq[idx]) *4, color =color_mapping(cor_data$Freq[idx])) +
ggplot2::theme_void() +
ggplot2::theme(aspect.ratio = 1)
})
GGally::ggpairs(
dt.ggpairs,
upper = list(continuous = function(data, mapping, ...) {
x_var <- as.character(rlang::get_expr(mapping$x))
y_var <- as.character(rlang::get_expr(mapping$y))
# print(paste("x_var:", x_var, "y_var:", y_var))
idx <- which((cor_data$Var1 == x_var & cor_data$Var2 == y_var) |
(cor_data$Var1 == y_var & cor_data$Var2 == x_var))
# print(paste("idx:", idx))
if (length(idx) == 1) {
custom_upper_plots[[idx]]
} else {
ggplot2::ggplot() + ggplot2::theme_void()
}
}),
lower = list(continuous = GGally::wrap(geomhex, binss = bin)),
diag = list(continuous = custom_densityDiag)
)
color_mapping <- function(value) {
if (value > 0) {
scales::col_numeric(palette = c("black", "#CD4071"), domain = c(0, 1))(value)
} else {
scales::col_numeric(palette = c("black", "#31688E"), domain = c(-1, 0))(value)
}
}
？annotate
?annotate
custom_upper_plots <- lapply(seq_len(nrow(cor_data)), function(idx) {
ggplot2::ggplot() +
ggplot2::annotate("text", x = 0.5, y = 0.5, label = sprintf("italic(R)= %.2f", cor_data$Freq[idx]),
size = abs(cor_data$Freq[idx]) *4, color =color_mapping(cor_data$Freq[idx])) +
ggplot2::theme_void() +
ggplot2::theme(aspect.ratio = 1)
})
GGally::ggpairs(
dt.ggpairs,
upper = list(continuous = function(data, mapping, ...) {
x_var <- as.character(rlang::get_expr(mapping$x))
y_var <- as.character(rlang::get_expr(mapping$y))
# print(paste("x_var:", x_var, "y_var:", y_var))
idx <- which((cor_data$Var1 == x_var & cor_data$Var2 == y_var) |
(cor_data$Var1 == y_var & cor_data$Var2 == x_var))
# print(paste("idx:", idx))
if (length(idx) == 1) {
custom_upper_plots[[idx]]
} else {
ggplot2::ggplot() + ggplot2::theme_void()
}
}),
lower = list(continuous = GGally::wrap(geomhex, binss = bin)),
diag = list(continuous = custom_densityDiag)
)
custom_upper_plots <- lapply(seq_len(nrow(cor_data)), function(idx) {
ggplot2::ggplot() +
ggplot2::annotate("text", x = 0.5, y = 0.5, label = sprintf("italic R= %.2f", cor_data$Freq[idx]),
size = abs(cor_data$Freq[idx]) *4, color =color_mapping(cor_data$Freq[idx])) +
ggplot2::theme_void() +
ggplot2::theme(aspect.ratio = 1)
})
GGally::ggpairs(
dt.ggpairs,
upper = list(continuous = function(data, mapping, ...) {
x_var <- as.character(rlang::get_expr(mapping$x))
y_var <- as.character(rlang::get_expr(mapping$y))
# print(paste("x_var:", x_var, "y_var:", y_var))
idx <- which((cor_data$Var1 == x_var & cor_data$Var2 == y_var) |
(cor_data$Var1 == y_var & cor_data$Var2 == x_var))
# print(paste("idx:", idx))
if (length(idx) == 1) {
custom_upper_plots[[idx]]
} else {
ggplot2::ggplot() + ggplot2::theme_void()
}
}),
lower = list(continuous = GGally::wrap(geomhex, binss = bin)),
diag = list(continuous = custom_densityDiag)
)
custom_upper_plots <- lapply(seq_len(nrow(cor_data)), function(idx) {
ggplot2::ggplot() +
ggplot2::annotate("text", x = 0.5, y = 0.5, label = sprintf("%.2f", cor_data$Freq[idx]),
size = abs(cor_data$Freq[idx]) *4, color =color_mapping(cor_data$Freq[idx])) +
ggplot2::theme_void() +
ggplot2::theme(aspect.ratio = 1)
})
GGally::ggpairs(
dt.ggpairs,
upper = list(continuous = function(data, mapping, ...) {
x_var <- as.character(rlang::get_expr(mapping$x))
y_var <- as.character(rlang::get_expr(mapping$y))
# print(paste("x_var:", x_var, "y_var:", y_var))
idx <- which((cor_data$Var1 == x_var & cor_data$Var2 == y_var) |
(cor_data$Var1 == y_var & cor_data$Var2 == x_var))
# print(paste("idx:", idx))
if (length(idx) == 1) {
custom_upper_plots[[idx]]
} else {
ggplot2::ggplot() + ggplot2::theme_void()
}
}),
lower = list(continuous = GGally::wrap(geomhex, binss = bin)),
diag = list(continuous = custom_densityDiag)
)
setwd("H:/LJY")
library(tidyverse)
library(data.table)
psm=fread("psm.tsv")
View(psm)
length(unique(psm$Spectrum))
length(unique(psm$`Spectrum File`))
file.id=unique(psm$`Spectrum File`)
fileInfor=data.frame(file.id=unique(psm$`Spectrum File`))
View(fileInfor)
fileInfor=data.frame(file.id=unique(psm$`Spectrum File`)) %>%
mutate(sampleid=paste0("s",1:nrow(.)))
View(fileInfor)
colnames(psm)
fileInfor=data.frame(`Spectrum File`=unique(psm$`Spectrum File`)) %>%
mutate(sampleid=paste0("s",1:nrow(.)))
View(fileInfor)
psm= psm %>%
merge(fileInfor,by = "Spectrum File") %>%
select(!`Spectrum File`) %>%
select(!Spectrum) %>%
select(sampleid,everything())
fileInfor
fileInfor=data.frame("Spectrum.File"=unique(psm$`Spectrum File`)) %>%
mutate(sampleid=paste0("s",1:nrow(.)))
fileInfor
View(fileInfor)
psm= psm %>% rename("Spectrum.File"="Spectrum File")
View(psm)
psm=fread("psm.tsv")
colnames(psm)
fileInfor=data.frame("Spectrum.File"=unique(psm$`Spectrum File`)) %>%
mutate(sampleid=paste0("s",1:nrow(.)))
psm= psm %>% rename("Spectrum.File"="Spectrum File") %>%
merge(fileInfor,by = "Spectrum.File") %>%
select(!`Spectrum.File`) %>%
select(!Spectrum) %>%
select(sampleid,everything())
View(psm)
psm.filter=psm %>% filter(`Total Glycan Composition`!="")
View(psm.filter)
Q8IZF2=psm.filter %>% filter(`Protein ID`=="Q8IZF2")
View(Q8IZF2)
Q8IZF2
Q8IZF2=psm.filter %>% filter(`Protein ID`=="Q8IZF2") %>% as_tibble()
Q8IZF2
Q8IZF2=psm.filter %>% filter(`Protein ID`=="Q8IZF2") %>% as_tibble() %>%
colnames(Q8IZF2)
Q8IZF2=psm.filter %>% filter(`Protein ID`=="Q8IZF2") %>% as_tibble() %>%
colnames(psm)
Q8IZF2=psm.filter %>% filter(`Protein ID`=="Q8IZF2") %>% as_tibble() %>%
names(Q8IZF2)
colnames(Q8IZF2)
View(Q8IZF2)
View(Q8IZF2)
Q8IZF2=psm.filter %>% filter(`Protein ID`=="Q8IZF2") %>% as_tibble() %>%
filter(`Glycan q-value`<=0.01)
View(Q8IZF2)
Q8IZF2=psm.filter %>% filter(`Protein ID`=="Q8IZF2") %>% as_tibble() %>%
filter(`Glycan q-value`<=0.01) %>%
filter(`Observed Modifications`!="")
View(Q8IZF2)
Q8IZF2=psm.filter %>% filter(`Protein ID`=="Q8IZF2") %>% as_tibble() %>%
filter(`Glycan q-value`<=0.01)
View(Q8IZF2)
unique(Q8IZF2$`Observed Modifications`)
View(Q8IZF2)
Q8IZF2
colnames(Q8IZF2)
Q8IZF2=psm.filter %>% filter(`Protein ID`=="Q8IZF2") %>% as_tibble() %>%
filter(`Glycan q-value`<=0.01) %>%
filter(`Observed Modifications`!="") %>%
pivot_wider(
names_from = sampleid,
values_from = Intensity
)
View(Q8IZF2)
Q8IZF2=psm.filter %>% filter(`Protein ID`=="Q8IZF2") %>% as_tibble() %>%
filter(`Glycan q-value`<=0.01) %>%
filter(`Observed Modifications`!="")
Q8IZF2=psm.filter %>% filter(`Protein ID`=="Q8IZF2") %>% as_tibble() %>%
filter(`Glycan q-value`<=0.01) %>%
filter(`Observed Modifications`!="") %>%
pivot_wider(
names_from = sampleid,
values_from = Intensity
)
View(Q8IZF2)
